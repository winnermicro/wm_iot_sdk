if(CONFIG_COMPONENT_MBEDTLS_ENABLED)
    list(APPEND ADD_INCLUDE "src/include"
                            "port"
                            )

    list(APPEND ADD_PRIVATE_INCLUDE "src/library"
                                    )

    list(APPEND ADD_SRCS "src/library/aes.c"
                         "src/library/aesce.c"
                         "src/library/aesni.c"
                         "src/library/aria.c"
                         "src/library/asn1parse.c"
                         "src/library/asn1write.c"
                         "src/library/base64.c"
                         "src/library/bignum.c"
                         "src/library/bignum_core.c"
                         "src/library/bignum_mod.c"
                         "src/library/bignum_mod_raw.c"
                         "src/library/camellia.c"
                         "src/library/ccm.c"
                         "src/library/chacha20.c"
                         "src/library/chachapoly.c"
                         "src/library/cipher.c"
                         "src/library/cipher_wrap.c"
                         "src/library/cmac.c"
                         "src/library/constant_time.c"
                         "src/library/ctr_drbg.c"
                         "src/library/debug.c"
                         "src/library/des.c"
                         "src/library/dhm.c"
                         "src/library/ecdh.c"
                         "src/library/ecdsa.c"
                         "src/library/ecjpake.c"
                         "src/library/ecp.c"
                         "src/library/ecp_curves.c"
                         "src/library/entropy.c"
                         "src/library/entropy_poll.c"
                         "src/library/error.c"
                         "src/library/gcm.c"
                         "src/library/hash_info.c"
                         "src/library/hkdf.c"
                         "src/library/hmac_drbg.c"
                         "src/library/lmots.c"
                         "src/library/lms.c"
                         "src/library/md.c"
                         "src/library/md5.c"
                         "src/library/memory_buffer_alloc.c"
                         "src/library/mps_reader.c"
                         "src/library/mps_trace.c"
                         "src/library/net_sockets.c"
                         "src/library/nist_kw.c"
                         "src/library/oid.c"
                         "src/library/padlock.c"
                         "src/library/pem.c"
                         "src/library/pk.c"
                         "src/library/pk_wrap.c"
                         "src/library/pkcs12.c"
                         "src/library/pkcs5.c"
                         "src/library/pkcs7.c"
                         "src/library/pkparse.c"
                         "src/library/pkwrite.c"
                         "src/library/platform.c"
                         "src/library/platform_util.c"
                         "src/library/poly1305.c"
                         "src/library/psa_crypto.c"
                         "src/library/psa_crypto_aead.c"
                         "src/library/psa_crypto_cipher.c"
                         "src/library/psa_crypto_client.c"
                         "src/library/psa_crypto_driver_wrappers.c"
                         "src/library/psa_crypto_ecp.c"
                         "src/library/psa_crypto_hash.c"
                         "src/library/psa_crypto_mac.c"
                         "src/library/psa_crypto_pake.c"
                         "src/library/psa_crypto_rsa.c"
                         "src/library/psa_crypto_se.c"
                         "src/library/psa_crypto_slot_management.c"
                         "src/library/psa_crypto_storage.c"
                         "src/library/psa_its_file.c"
                         "src/library/psa_util.c"
                         "src/library/ripemd160.c"
                         "src/library/rsa_alt_helpers.c"
                         "src/library/sha1.c"
                         "src/library/sha256.c"
                         "src/library/sha512.c"
                         "src/library/ssl_cache.c"
                         "src/library/ssl_ciphersuites.c"
                         "src/library/ssl_client.c"
                         "src/library/ssl_cookie.c"
                         "src/library/ssl_debug_helpers_generated.c"
                         "src/library/ssl_msg.c"
                         "src/library/ssl_ticket.c"
                         "src/library/ssl_tls.c"
                         "src/library/ssl_tls12_client.c"
                         "src/library/ssl_tls12_server.c"
                         "src/library/ssl_tls13_client.c"
                         "src/library/ssl_tls13_generic.c"
                         "src/library/ssl_tls13_keys.c"
                         "src/library/ssl_tls13_server.c"
                         "src/library/threading.c"
                         "src/library/timing.c"
                         "src/library/version.c"
                         "src/library/version_features.c"
                         "src/library/x509.c"
                         "src/library/x509_create.c"
                         "src/library/x509_crl.c"
                         "src/library/x509_crt.c"
                         "src/library/x509_csr.c"
                         "src/library/x509write_crt.c"
                         "src/library/x509write_csr.c"
                         )

    list(APPEND ADD_SRCS "port/aes_alt.c"
                         "port/arc4_alt.c"
                         "port/des_alt.c"
                         "port/hardware_alt.c"
                         "port/md5_alt.c"
                         "port/net_alt.c"
                         "port/sha1_alt.c"
                         "port/timing_alt.c"
                         "port/rsa_alt.c"
                         )

    list(APPEND ADD_GDEFINITIONS -DMBEDTLS_CONFIG_FILE="wm_mbedtls_config.h"
                                 )

    if (CONFIG_UNIT_TEST_ENABLE_CODE_COVERAGE)
        list(APPEND ADD_DEFINITIONS -fno-profile-arcs -fno-test-coverage)
    endif()

    register_component()

endif()
